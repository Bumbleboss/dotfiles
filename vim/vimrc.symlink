" The basics
set nocompatible
syntax enable
set encoding=utf-8
set showcmd                     " display incomplete commands
filetype plugin indent on       " load file type plugins + indentation

" Searching
set hlsearch                    " highlight matches
set incsearch                   " incremental searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter

" Directories for swp files
set backupdir=~/.vim/backup
set directory=~/.vim/backup
set nobackup

" Whitespace stuff
set expandtab
set tabstop=2
set shiftwidth=2
set softtabstop=2
set listchars=tab:▸\ ,eol:¬,trail:·
set showbreak=…
set nolist
set formatoptions=l
set lbr
set wrap

" Set leader key for commands
let mapleader='\'

" GUI options
set guioptions-=T
set guioptions=aAce
"set transparency=0
set number
set ruler
set laststatus=2
" set guifont=Consolas:h16
" set guifont=PanicSans:h12
" set guifont=Inconsolata:h14
set guifont=Menlo:h14
syntax on

" Other settings
set visualbell
set nrformats=octal,hex

" Default color scheme
"color wombat
set background=dark
color solarized

" Shortcuts

nmap <silent> <leader>l :set list!<CR>
nmap <silent> <leader>w :set wrap!<CR>
nmap <silent> <leader>h :set invhlsearch<CR>
nmap <silent> <leader>s :set spell!<CR>

noremap ;; :%s:::g<Left><Left><Left>
noremap ;' :%s:::cg<Left><Left><Left><Left>

" Ctrl-j/k deletes blank line below/above, and Command-j/k inserts.
nnoremap <silent><C-J> m`:silent +g/\m^\s*$/d<CR>``:noh<CR>
nnoremap <silent><C-K> m`:silent -g/\m^\s*$/d<CR>``:noh<CR>
nnoremap <silent><D-j> :set paste<CR>m`o<Esc>``:set nopaste<CR>
nnoremap <silent><D-k> :set paste<CR>m`O<Esc>``:set nopaste<CR>

" Mimic Textmate indentation commands
nmap <D-[> <<
nmap <D-]> >>
vmap <D-[> <gv
vmap <D-]> >gv
imap <D-[> <C-O><<
imap <D-]> <C-O>>>

imap <C-l> <space>=><space>

" Quick edit/reload $MYVIMRC
nmap <leader>V :tabedit $MYVIMRC<CR>
nmap <leader>R :source $MYVIMRC<CR>

" NERDTree
nmap <leader><leader> :NERDTreeToggle<CR>

" Toggle comments
map <D-/> <leader>c<space>

" Quickly switch window panes
nmap <leader><tab> <C-w><C-w>

" Select whole document
nmap <leader>a ggVG

" double percentage sign in command mode is expanded
" to directory of current file - http://vimcasts.org/e/14
cnoremap %% <C-R>=expand('%:h').'/'<cr>
map <leader>f :CommandTFlush<cr>\|:CommandT<cr>
map <leader>F :CommandTFlush<cr>\|:CommandT %%<cr>

" Transmit DockSend
map <C-P> :DockSend<CR>

" Toggle hex code colour preview using HexHighlight
if exists('*HexHighlight()')
  nmap <leader>x :call HexHighlight()<Return>
endif

call pathogen#infect()

if has("gui_macvim")

  " Fullscreen takes up entire screen
  set fuoptions=maxhorz,maxvert

  " Command-Return for fullscreen
  macmenu Window.Toggle\ Full\ Screen\ Mode key=<D-CR>

endif

if has("autocmd")

  " Syntax of these languages is fussy over tabs Vs spaces
  autocmd FileType make setlocal ts=8 sts=8 sw=8 noexpandtab
  autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab

  " Customisations based on house-style (arbitrary)
  autocmd FileType ruby setlocal ts=2 sts=2 sw=2 expandtab
  "autocmd BufWritePre *.py,*.js,*.rb,*.erb,*.pl :call <SID>StripTrailingWhitespaces()
  au BufNewFile,BufRead *.ss setf xhtml

  " HAML
  autocmd FileType haml setlocal ts=2 sts=2 sw=2 expandtab

  " Various Filetype settings

  " Thorfile, Rakefile, Vagrantfile and Gemfile are Ruby
  au BufRead,BufNewFile {Gemfile,Rakefile,Vagrantfile,Thorfile,config.ru}    set ft=ruby

  " add json syntax highlighting
  au BufNewFile,BufRead *.json set ft=javascript

  " make Python follow PEP8 ( http://www.python.org/dev/peps/pep-0008/ )
  au FileType python set softtabstop=4 tabstop=4 shiftwidth=4 textwidth=79

  " load the plugin and indent settings for the detected filetype
  filetype plugin indent on

endif

"set nocompatible
"syntax enable
"set encoding=utf-8
"set showcmd                     " display incomplete commands
"filetype plugin indent on       " load file type plugins + indentation

"" Searching
"set hlsearch                    " highlight matches
"set incsearch                   " incremental searching
"set ignorecase                  " searches are case insensitive...
"set smartcase                   " ... unless they contain at least one capital letter

"" Directories for swp files
"set backupdir=~/.vim/backup
"set directory=~/.vim/backup
"set nobackup

"" Whitespace stuff
"set noexpandtab
"set tabstop=4
"set shiftwidth=4
"set softtabstop=4
"set listchars=tab:▸\ ,eol:¬,trail:·
"set showbreak=…
"set list
"set formatoptions=l
"set lbr
"set wrap

"" Set leader key for commands
"let mapleader='\'

"" GUI options
"set guioptions-=T
"set guioptions=aAce
"set transparency=0
"set number
"set ruler
"set laststatus=2
"set guifont=Consolas:h16
"" set guifont=PanicSans:h12
"" set guifont=Inconsolata:h14
"" set guifont=Menlo:h14
"syntax on

"" Other settings
"set visualbell
"set nrformats=octal,hex

"" Default color scheme
"color wombat

"call pathogen#infect()

"if has("gui_macvim")

  "" Fullscreen takes up entire screen
  "set fuoptions=maxhorz,maxvert

  "" Command-Return for fullscreen
  "macmenu Window.Toggle\ Full\ Screen\ Mode key=<D-CR>

"endif

"" Other Commands

"nmap <silent> <leader>l :set list!<CR>
"nmap <silent> <leader>w :set wrap!<CR>
"nmap <silent> <leader>h :set invhlsearch<CR>
"nmap <silent> <leader>s :set spell!<CR>

"noremap ;; :%s:::g<Left><Left><Left>
"noremap ;' :%s:::cg<Left><Left><Left><Left>

"" Ctrl-j/k deletes blank line below/above, and Command-j/k inserts.
"nnoremap <silent><C-J> m`:silent +g/\m^\s*$/d<CR>``:noh<CR>
"nnoremap <silent><C-K> m`:silent -g/\m^\s*$/d<CR>``:noh<CR>
"nnoremap <silent><D-j> :set paste<CR>m`o<Esc>``:set nopaste<CR>
"nnoremap <silent><D-k> :set paste<CR>m`O<Esc>``:set nopaste<CR>

"" Mimic Textmate indentation commands
"nmap <D-[> <<
"nmap <D-]> >>
"vmap <D-[> <gv
"vmap <D-]> >gv

"" Quick edit/reload $MYVIMRC
"nmap <leader>V :tabedit $MYVIMRC<CR>
"nmap <leader>R :source $MYVIMRC<CR>

"" NERDTree
"nmap <leader>\ :NERDTreeToggle<CR>

"" Toggle comments
"map <D-/> <leader>c<space>

"" Quickly switch window panes
"nmap <leader>w <C-w><C-w>

"" double percentage sign in command mode is expanded
"" to directory of current file - http://vimcasts.org/e/14
"cnoremap %% <C-R>=expand('%:h').'/'<cr>
"map <leader>f :CommandTFlush<cr>\|:CommandT<cr>
"map <leader>F :CommandTFlush<cr>\|:CommandT %%<cr>

"" Transmit DockSend
"map <C-P> :DockSend<CR>


"if has("autocmd")

  "" Syntax of these languages is fussy over tabs Vs spaces
  "autocmd FileType make setlocal ts=8 sts=8 sw=8 noexpandtab
  "autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab

			

  "" Customisations based on house-style (arbitrary)
  "autocmd FileType ruby setlocal ts=2 sts=2 sw=2 expandtab
  "autocmd BufWritePre *.py,*.js,*.rb,*.erb,*.pl :call <SID>StripTrailingWhitespaces()
  "au BufNewFile,BufRead *.ss setf xhtml

  "" Various Filetype settings

  "" Thorfile, Rakefile, Vagrantfile and Gemfile are Ruby
  "au BufRead,BufNewFile {Gemfile,Rakefile,Vagrantfile,Thorfile,config.ru}    set ft=ruby

  "" md, markdown, and mk are markdown and define buffer-local preview
  "au BufRead,BufNewFile *.{md,markdown,mdown,mkd,mkdn} call s:setupMarkup()

  "" add json syntax highlighting
  "au BufNewFile,BufRead *.json set ft=javascript

  "" make Python follow PEP8 ( http://www.python.org/dev/peps/pep-0008/ )
  "au FileType python set softtabstop=4 tabstop=4 shiftwidth=4 textwidth=79

  "" load the plugin and indent settings for the detected filetype
  "filetype plugin indent on

"endif

"" Toggle hex code colour preview using HexHighlight
"if exists('*HexHighlight()')
  "nmap <leader>x :call HexHighlight()<Return>
"endif
